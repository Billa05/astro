---
import "../style.css"
import axios from "axios";

const GITHUB_TOKEN = import.meta.env.GITHUB_TOKEN

const activities = []

const response = await axios.get('https://api.github.com/users/BIlla05/events', {
	headers: {
		Authorization: `Bearer ${GITHUB_TOKEN}`
	}
});

if (response.status < 200 || response.status >= 300) {
	throw new Error(`HTTP error! status: ${response.status}`);
}

const data = await response.data;

for (let i=0;i<data.length;i++){
	const date = new Date(data[i]?.created_at);
	let repo_name = data[i]?.repo?.name;
	let issue_title = data[i]?.payload?.issue?.title;
	let commit_msg = data[i]?.payload?.commits?.[0]?.message;

	let existingActivity = activities.find(a => a.issue_title === issue_title);

	if (existingActivity) {
		let existingDate = new Date(existingActivity.date);
		if (date > existingDate) {
			let index = activities.indexOf(existingActivity);
			activities[index] = {
				date: date,
				repo_name: repo_name,
				issue_title: issue_title,
				commit_msg: commit_msg
			};
		}
	} else {
		activities.push({
			date: date,
			repo_name: repo_name,
			issue_title: issue_title,
			commit_msg: commit_msg
		});
	}
}

console.log(activities)
---

<!DOCTYPE html>
<html lang="en">
<head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Biresh Biswas</title>
        <!-- <link rel="stylesheet" href="style.css"> -->

</head>
<body>
	{activities.map(ac => {

	})}
    <div class="relative min-h-screen bg-light-blue-200 p-10 transition-colors duration-500">
        <div class="absolute top-0 right-0 p-4">
            <button class="w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center transition-colors duration-500">
                <svg
                            class="h-6 w-6 text-gray-800 dark:text-gray-200 transition-colors duration-500"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                            ></path>
                            <path
                                d="M19 12v3a2 2 0 01-2 2h-1a2 2 0 01-2-2v-1a2 2 0 01-2-2 2 2 0 00-2-2 2 2 0 01-2-2V9a2 2 0 012-2h1a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2z"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                            ></path>
                        </svg>
                        <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-1 h-6 bg-blue-700 transition-colors duration-500"></div>
                    </button>
                </div>
                <main class="min-h-screen">
                    <section class="flex flex-col md:flex-row gap-10">
                        <div class="flex-1">
                            <div class="flex flex-col md:flex-row gap-4 items-center"><br>
                                <img
                                    alt="Profile Picture"
                                    class="rounded-full w-48 h-48 object-cover"
                                    height="200"
                                    src="/profile-pic.png"
                                    style="aspect-ratio:200/200;object-fit:cover"
                                    width="200"
                                />
                                <div>
                                    <h1 class="text-4xl font-bold text-gray-800 dark:text-gray-400 mb-4">About Me</h1>
                                    <p class="text-gray-600 dark:text-gray-400 text-lg">
                                        For the last four months, my focus has been on contributing to open-source projects. Now, I've made the decision to embark on building my own projects,starting with revamping my personal website.
                                    </p><br>
                                    <p class="text-gray-600 dark:text-gray-400 text-lg mt-4">
                                        Throughout this period, I've discovered a preference for backend development. So to enhance the functionality of my site, I've integrated the GitHub API to display my contributions dynamically.
                                    </p>
                                </div>
                            </div>
                            <div class="mt-10">
                                <h1 class="text-4xl font-bold text-gray-800 dark:text-gray-400 mb-4">Currently Working On</h1>
                                <div class="p-4 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-800 transition-colors duration-500">
                                    <a href="https://github.com/Billa05/Billa05.github.io" target="_blank"><h2 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">My website</h2></a>
                                    <p class="text-gray-600 dark:text-gray-400">
                                        I have revamped my website.
                                    </p>
                                </div>
                            </div>
                            <div class="mt-10">
                                <h1 class="text-4xl font-bold text-gray-800 dark:text-gray-400 mb-4">Portfolio</h1>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div class="p-4 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-800 transition-colors duration-500">
                                       <a href="/tictactoe/TicTacToe.html" target="_blank"><h2 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">Tic-Tac-Toe</h2></a>
                                        <p class="text-gray-600 dark:text-gray-400">
                                            I created a Tic Tac Toe game using JavaScript, resulting in a code that heavily features JavaScript.</p>
                                    </div>
                                    <div class="p-4 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-800 transition-colors duration-500">
                                        <h2 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">TO-DO Application</h2>
                                        <p class="text-gray-600 dark:text-gray-400"> I am building a to-do application that will save the tasks in the cookies of the website.</p>
                                    </div>
                                    <div class="p-4 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-800 transition-colors duration-500">
                                        <h2 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">Project 3</h2>
                                        <p class="text-gray-600 dark:text-gray-400">SOON</p>
                                    </div>
                                    <div class="p-4 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-800 transition-colors duration-500">
                                        <h2 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">Project 4</h2>
                                        <p class="text-gray-600 dark:text-gray-400">SOON</p>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                        <div class="flex-1 flex flex-col items-center justify-center">
                            <h1 class="text-4xl font-bold text-gray-800 dark:text-gray-400 mb-4">Github updates</h1>
                            <div class="flex flex-col items-center space-y-8">
								{activities.map((activity, index) => <div class="flex items-center justify-center w-10 h-10 rounded-full bg-transparent border border-gray-300 dark:border-gray-700 text-gray-500 dark:text-gray-400 hover:bg-gray-300 dark:hover:bg-gray-700 hover:text-white dark:hover:text-white transition-colors duration-500">
									<span>{index + 1}</span>
									<div class={index == activities.length - 1 ? "absolute bottom-full mt-2 p-2 bg-white dark:bg-gray-900 text-gray-700 dark:text-gray-300 rounded shadow opacity-0" : "absolute top-full mt-2 p-2 bg-white dark:bg-gray-900 text-gray-700 dark:text-gray-300 rounded shadow opacity-0 "}>
										{
											activity.issue_title === undefined 
											? 
											<>
											<p><a href={`https://github.com/${activity.repo_name}`} target="_blank">repository: ${activity.repo_name}</a></p>
	<br><p>Self Project</p></> :
	<>
	<p><a href={`https://github.com/${activity.repo_name}`} target="_blank">repository: ${activity.repo_name}</a></p>
	<br><p>Self Project</p> </>
										}
									</div>
									</div>)}
                            </div>
                        </div>
                        </div>
                    </section>
                </main>
            </div>
            <script type="module" src="/script.js" defer>
				
				</script>     
</body>

<script>
	const container = document.querySelector('.flex.flex-col.items-center.space-y-8');

activity.forEach((item, index) => {
	const element = document.createElement('div');
	element.className = 'group relative';

	const numberDiv = document.createElement('div');
	numberDiv.className = 'flex items-center justify-center w-10 h-10 rounded-full bg-transparent border border-gray-300 dark:border-gray-700 text-gray-500 dark:text-gray-400 hover:bg-gray-300 dark:hover:bg-gray-700 hover:text-white dark:hover:text-white transition-colors duration-500';
	numberDiv.innerHTML = `<span>${index + 1}</span>`;
	element.appendChild(numberDiv);

	const descriptionDiv = document.createElement('div');
	if (index==activity.length-1){
		descriptionDiv.className = 'absolute bottom-full mt-2 p-2 bg-white dark:bg-gray-900 text-gray-700 dark:text-gray-300 rounded shadow opacity-0 ';
	}else{
		descriptionDiv.className = 'absolute top-full mt-2 p-2 bg-white dark:bg-gray-900 text-gray-700 dark:text-gray-300 rounded shadow opacity-0 ';
	}
	if(!item.issue_title){
		descriptionDiv.innerHTML = `<p><a href="https://github.com/${item.repo_name}" target="_blank">repository: ${item.repo_name}</a></p>
	<br><p>Self Project</p>`;
	}else{
		descriptionDiv.innerHTML = `<p><a href="https://github.com/${item.repo_name}" target="_blank">repository: ${item.repo_name}</a></p>
	<br><p>Issue: ${item.issue_title}</p>`;
	}
	element.appendChild(descriptionDiv);

	container.appendChild(element);

	numberDiv.addEventListener("mouseenter",()=>{
		clearTimeout(timeoutId);
		descriptionDiv.classList.remove("opacity-0");
	})

	numberDiv.addEventListener("mouseleave",()=>{
		timeoutId = setTimeout(() => {
			descriptionDiv.classList.add("opacity-0");
		}, 200); // 200ms delay before hiding the description
	})

	descriptionDiv.addEventListener("mouseenter",()=>{
		clearTimeout(timeoutId);
	})

	descriptionDiv.addEventListener("mouseleave",()=>{
		descriptionDiv.classList.add("opacity-0");
	})

	element.addEventListener("mouseleave",()=>{
		descriptionDiv.classList.add("opacity-0");
	})

	if(index!=activity.length-1){
		const separator = document.createElement('div');
		separator.className = 'h-24 w-px bg-gray-300 dark:bg-gray-700';
		container.appendChild(separator);
	}
</script>
</html>
